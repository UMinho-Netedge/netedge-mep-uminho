# Copyright 2022 Centro ALGORITMI - University of Minho
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#     Unless required by applicable law or agreed to in writing, software
#     distributed under the License is distributed on an "AS IS" BASIS,
#     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#     See the License for the specific language governing permissions and
#     limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.mepconfig.name }}-deployment
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.mepconfig.name }}
spec:
  replicas: {{ .Values.mepconfig.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.mepconfig.name }}
  template:
    metadata:
      namespace: {{ .Values.namespace }}
      labels:
        app: {{ .Values.mepconfig.name }}
    spec:
      serviceAccountName: {{ .Values.mepconfig.name }}
      automountServiceAccountToken: true
      containers:
      - name: {{ .Values.mepconfig.name }}
        image: "{{ .Values.mepconfig.image }}"
        ports:
        - containerPort: {{ .Values.mepconfig.service.targetPort }}
        env:
          - name: ME_CONFIG_MONGODB_SERVER
            valueFrom:
              configMapKeyRef:
                name: mongodb-configmap
                key: database_url
          - name: ME_CONFIG_MONGODB_PORT
            valueFrom:
              configMapKeyRef:
                name: mongodb-configmap
                key: database_port
          - name: ME_CONFIG_MONGODB_DATABASE
            valueFrom:
              configMapKeyRef:
                name: mongodb-configmap
                key: database_name                
          - name: ME_CONFIG_MONGODB_ADMINUSERNAME
            valueFrom:
              secretKeyRef:
                name: mongodb-secret
                key: mongodb_username
          - name: ME_CONFIG_MONGODB_ADMINPASSWORD
            valueFrom:
              secretKeyRef:
                name: mongodb-secret
                key: mongodb_password
          - name: OAUTH_SERVER
            valueFrom:
              configMapKeyRef:
                name: auth-configmap
                key: auth-server-url
          - name: OAUTH_PORT
            valueFrom:
              configMapKeyRef:
                name: auth-configmap
                key: auth-server-port
          - name: DNS_API_SERVER
            valueFrom:
              configMapKeyRef:
                name: dnsapi-configmap
                key: dnsapi-server-url
          - name: DNS_API_PORT
            valueFrom:
              configMapKeyRef:
                name: dnsapi-configmap
                key: dnsapi-server-port                
      restartPolicy: Always
status: {}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.mepconfig.name }}-service
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.mepconfig.name }}
spec:
  selector:
    app: {{ .Values.mepconfig.name }}
  ports:
  - name: {{ .Values.mepconfig.name }}
    protocol: TCP
    port: {{ .Values.mepconfig.service.port }}
    targetPort: {{ .Values.mepconfig.service.targetPort }}
  type: {{ .Values.mepconfig.service.type }}

---

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.mepconfig.name }}-ingress
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.mepconfig.name }}
    app.kubernetes.io/instance: {{ .Values.appInstanceId }}
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ .Values.mepconfig.name }}-service
            port:
              number: {{ .Values.mepconfig.service.port }}
    host: {{ .Values.mepconfig.ingress.url }}

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.mepconfig.name }}
  namespace: {{ .Values.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Values.mepconfig.name }}-role
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get","list","watch","update","create", "delete"]
- apiGroups: ["networking.k8s.io"]
  resources: ["networkpolicies"]
  verbs: ["get","list","watch","update","create","delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Values.mepconfig.name }}-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ .Values.mepconfig.name }}-role
subjects:
- kind: ServiceAccount
  name: {{ .Values.mepconfig.name }}
  namespace: {{ .Values.namespace }}